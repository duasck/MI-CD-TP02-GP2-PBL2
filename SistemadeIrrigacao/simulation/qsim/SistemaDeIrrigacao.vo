// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "06/06/2024 00:23:51"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module deslocamento_coluna_leds (
	clk,
	coluna);
input 	clk;
output 	[4:0] coluna;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \coluna[1]~reg0_regout ;
wire \coluna[2]~reg0_regout ;
wire \coluna[3]~reg0_regout ;
wire \coluna[4]~reg0_regout ;
wire \coluna[0]~reg0_regout ;


// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y4_N5
maxii_lcell \coluna[1]~reg0 (
// Equation(s):
// \coluna[1]~reg0_regout  = DFFEAS((((!\coluna[0]~reg0_regout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\coluna[0]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\coluna[1]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \coluna[1]~reg0 .lut_mask = "00ff";
defparam \coluna[1]~reg0 .operation_mode = "normal";
defparam \coluna[1]~reg0 .output_mode = "reg_only";
defparam \coluna[1]~reg0 .register_cascade_mode = "off";
defparam \coluna[1]~reg0 .sum_lutc_input = "datac";
defparam \coluna[1]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y4_N6
maxii_lcell \coluna[2]~reg0 (
// Equation(s):
// \coluna[2]~reg0_regout  = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , , \coluna[1]~reg0_regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\coluna[1]~reg0_regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\coluna[2]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \coluna[2]~reg0 .lut_mask = "0000";
defparam \coluna[2]~reg0 .operation_mode = "normal";
defparam \coluna[2]~reg0 .output_mode = "reg_only";
defparam \coluna[2]~reg0 .register_cascade_mode = "off";
defparam \coluna[2]~reg0 .sum_lutc_input = "datac";
defparam \coluna[2]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y4_N4
maxii_lcell \coluna[3]~reg0 (
// Equation(s):
// \coluna[3]~reg0_regout  = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , , \coluna[2]~reg0_regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\coluna[2]~reg0_regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\coluna[3]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \coluna[3]~reg0 .lut_mask = "0000";
defparam \coluna[3]~reg0 .operation_mode = "normal";
defparam \coluna[3]~reg0 .output_mode = "reg_only";
defparam \coluna[3]~reg0 .register_cascade_mode = "off";
defparam \coluna[3]~reg0 .sum_lutc_input = "datac";
defparam \coluna[3]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y4_N8
maxii_lcell \coluna[4]~reg0 (
// Equation(s):
// \coluna[4]~reg0_regout  = DFFEAS(GND, GLOBAL(\clk~combout ), VCC, , , \coluna[3]~reg0_regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\coluna[3]~reg0_regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\coluna[4]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \coluna[4]~reg0 .lut_mask = "0000";
defparam \coluna[4]~reg0 .operation_mode = "normal";
defparam \coluna[4]~reg0 .output_mode = "reg_only";
defparam \coluna[4]~reg0 .register_cascade_mode = "off";
defparam \coluna[4]~reg0 .sum_lutc_input = "datac";
defparam \coluna[4]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X2_Y4_N9
maxii_lcell \coluna[0]~reg0 (
// Equation(s):
// \coluna[0]~reg0_regout  = DFFEAS((((!\coluna[4]~reg0_regout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\coluna[4]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\coluna[0]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \coluna[0]~reg0 .lut_mask = "00ff";
defparam \coluna[0]~reg0 .operation_mode = "normal";
defparam \coluna[0]~reg0 .output_mode = "reg_only";
defparam \coluna[0]~reg0 .register_cascade_mode = "off";
defparam \coluna[0]~reg0 .sum_lutc_input = "datac";
defparam \coluna[0]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \coluna[0]~I (
	.datain(!\coluna[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(coluna[0]));
// synopsys translate_off
defparam \coluna[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_5,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \coluna[1]~I (
	.datain(\coluna[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(coluna[1]));
// synopsys translate_off
defparam \coluna[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \coluna[2]~I (
	.datain(\coluna[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(coluna[2]));
// synopsys translate_off
defparam \coluna[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_4,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \coluna[3]~I (
	.datain(\coluna[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(coluna[3]));
// synopsys translate_off
defparam \coluna[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_100,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \coluna[4]~I (
	.datain(\coluna[4]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(coluna[4]));
// synopsys translate_off
defparam \coluna[4]~I .operation_mode = "output";
// synopsys translate_on

endmodule
