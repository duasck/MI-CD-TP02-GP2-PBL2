// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/26/2024 22:29:02"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          main
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module main_vlg_vec_tst();
// constants                                           
// general purpose registers
reg H;
reg L;
reg M;
reg T;
reg Ua;
reg Us;
reg rest;
reg switch;
// wires                                               
wire Alarme;
wire Baixo;
wire Bs;
wire Cheio;
wire Erro;
wire Medio;
wire Vazio;
wire Ve;
wire Vs;

// assign statements (if any)                          
main i1 (
// port map - connection between master ports and signals/registers   
	.Alarme(Alarme),
	.Baixo(Baixo),
	.Bs(Bs),
	.Cheio(Cheio),
	.Erro(Erro),
	.H(H),
	.L(L),
	.M(M),
	.Medio(Medio),
	.T(T),
	.Ua(Ua),
	.Us(Us),
	.Vazio(Vazio),
	.Ve(Ve),
	.Vs(Vs),
	.rest(rest),
	.switch(switch)
);
initial 
begin 
#100000 $finish;
end 

// H
initial
begin
	H = 1'b0;
end 

// L
initial
begin
	L = 1'b0;
end 

// M
initial
begin
	M = 1'b0;
end 

// T
initial
begin
	T = 1'b0;
end 

// Ua
initial
begin
	Ua = 1'b0;
end 

// Us
initial
begin
	Us = 1'b0;
end 

// rest
initial
begin
	rest = 1'b0;
end 

// switch
initial
begin
	switch = 1'b0;
end 
endmodule

