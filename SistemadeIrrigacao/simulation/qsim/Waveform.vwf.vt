// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/05/2024 22:59:49"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          top_module
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module top_module_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg reset;
reg vs;
// wires                                               
wire [3:0] Dmin;
wire [3:0] Dseg;
wire [3:0] Umin;
wire [3:0] Useg;
wire [3:0] dezenas_min;
wire [3:0] unidades_min;

// assign statements (if any)                          
top_module i1 (
// port map - connection between master ports and signals/registers   
	.Dmin(Dmin),
	.Dseg(Dseg),
	.Umin(Umin),
	.Useg(Useg),
	.clk(clk),
	.dezenas_min(dezenas_min),
	.reset(reset),
	.unidades_min(unidades_min),
	.vs(vs)
);
initial 
begin 
#100000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #500 1'b1;
	#500;
end 

// reset
initial
begin
	reset = 1'b0;
end 

// vs
initial
begin
	vs = 1'b1;
end 
endmodule

