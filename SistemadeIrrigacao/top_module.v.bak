module top_module (
    input wire clk,
    input wire reset,
    input wire [3:0] D,   // Novo sinal para inicializar o contador
    output wire [3:0] segundos_unidades,
    output wire [3:0] segundos_decenas,
    output wire [3:0] minutos_unidades,
    output wire [3:0] minutos_decenas
);
    wire clk_1hz;
    wire carry_segundos_unidades, carry_segundos_decenas, carry_minutos_unidades;

    // Instancia divisor de relogio
    divisor_clk divisor (
        .clk(clk),
        .rstn(reset),
        .out(clk_1hz)
    );

    // Contador de segundos (unidades, 0-9)
    down_count contador_segundos_unidades (
        .clk(clk_1hz),
        .load(reset),
        .d(4'b1001),      // Contador para 0-9
        .up_down(1'b0),   // Decrescente
        .cten(1'b1),      // Habilitado
        .q(segundos_unidades),
        .rco(carry_segundos_unidades),
        .max_min()        // Não usado
    );

    // Contador de segundos (decenas, 0-5)
    down_count contador_segundos_decenas (
        .clk(carry_segundos_unidades),
        .load(reset),
        .d(4'b0101),      // Contador para 0-5
        .up_down(1'b0),   // Decrescente
        .cten(1'b1),      // Habilitado
        .q(segundos_decenas),
        .rco(carry_segundos_decenas),
        .max_min()        // Não usado
    );

    // Contador de minutos (unidades, 0-9)
    down_count contador_minutos_unidades (
        .clk(carry_segundos_decenas),
        .load(reset),
        .d(4'b1001),      // Contador para 0-9
        .up_down(1'b0),   // Decrescente
        .cten(1'b1),      // Habilitado
        .q(minutos_unidades),
        .rco(carry_minutos_unidades),
        .max_min()        // Não usado
    );

    // Contador de minutos (decenas, 0-5)
    down_count contador_minutos_decenas (
        .clk(carry_minutos_unidades),
        .load(reset),
        .d(4'b0101),      // Contador para 0-5
        .up_down(1'b0),   // Decrescente
        .cten(1'b1),      // Habilitado
        .q(minutos_decenas),
        .rco(),           // Não usado
        .max_min()        // Não usado
    );

endmodule
